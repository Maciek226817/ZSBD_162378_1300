Kopiowanie tabel:

CREATE TABLE COUNTRIES AS
SELECT * FROM HR.COUNTRIES;

CREATE TABLE DEPARTMENTS AS
SELECT * FROM HR.DEPARTMENTS;

CREATE TABLE EMPLOYEES AS
SELECT * FROM HR.EMPLOYEES;

CREATE TABLE JOB_GRADES AS
SELECT * FROM HR.JOB_GRADES;

CREATE TABLE JOB_HISTORY AS
SELECT * FROM HR.JOB_HISTORY;

CREATE TABLE JOBS AS
SELECT * FROM HR.JOBS;

CREATE TABLE LOCATIONS AS
SELECT * FROM HR.LOCATIONS;

CREATE TABLE PRODUCTS AS
SELECT * FROM HR.PRODUCTS;

CREATE TABLE REGIONS AS
SELECT * FROM HR.REGIONS;

CREATE TABLE SALES AS
SELECT * FROM HR.SALES;

KLUCZE GŁÓWNE:

ALTER TABLE COUNTRIES
ADD PRIMARY KEY (COUNTRY_ID);

ALTER TABLE DEPARTMENTS
ADD PRIMARY KEY (DEPARTMENT_ID);

ALTER TABLE EMPLOYEES
ADD PRIMARY KEY (EMPLOYEE_ID);

ALTER TABLE JOBS
ADD PRIMARY KEY (JOB_ID);

ALTER TABLE LOCATIONS
ADD PRIMARY KEY (LOCATION_ID);

ALTER TABLE PRODUCTS
ADD PRIMARY KEY (PRODUCT_ID);

ALTER TABLE REGIONS
ADD PRIMARY KEY (REGION_ID);

ALTER TABLE SALES
ADD PRIMARY KEY (SALE_ID);

KLUCZE OBCE:


ALTER TABLE COUNTRIES
ADD FOREIGN KEY (REGION_ID) REFERENCES REGIONS (REGION_ID);

ALTER TABLE DEPARTMENTS
ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID);

ALTER TABLE EMPLOYEES
ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID);

ALTER TABLE JOB_HISTORY
ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
ADD FOREIGN KEY (JOB_ID) REFERENCES JOBS (JOB_ID)
ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID);

ALTER TABLE JOBS
ADD FOREIGN KEY (JOB_ID) REFERENCES JOBS (JOB_ID);

ALTER TABLE LOCATIONS
ADD FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES (COUNTRY_ID);

ALTER TABLE SALES
ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);


ZAPYTANIA:


1.Z tabeli employees wypisz w jednej kolumnie nazwisko i zarobki – nazwij 
kolumnę wynagrodzenie, dla osób z departamentów 20 i 50 z zarobkami 
pomiędzy 2000 a 7000, uporządkuj kolumny według nazwiska 

SELECT LAST_NAME || ' ' || SALARY AS WYNAGRODZENIE
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20, 50)
  AND SALARY BETWEEN 2000 AND 7000
ORDER BY LAST_NAME;

2.Z tabeli employees wyciągnąć informację data zatrudnienia, nazwisko oraz 
kolumnę podaną przez użytkownika dla osób mających menadżera 
zatrudnionych w roku 2005. Uporządkować według kolumny podanej przez 
użytkownika 

SELECT HIRE_DATE,
       LAST_NAME,
       &INPUT_COLUMN AS INPUT_COLUMN
FROM employees
WHERE manager_id IS NOT NULL
  AND TO_CHAR(hire_date, 'YYYY') = '2005'
ORDER BY &ORDER_BY;

3.Wypisać imiona i nazwiska razem, zarobki oraz numer telefonu porządkując 
dane według pierwszej kolumny malejąco a następnie drugiej rosnąco (użyć 
numerów do porządkowania) dla osób z trzecią literą nazwiska ‘e’ oraz częścią 
imienia podaną przez użytkownika 

SELECT first_name || ' ' || last_name AS "Imię i Nazwisko",
       salary AS "Zarobki",
       phone_number AS "Numer telefonu"
FROM employees
WHERE SUBSTR(last_name, 3, 1) = 'e'
  AND first_name LIKE '%' || '&część_imienia' || '%'
ORDER BY 1 DESC, 2 ASC;

4.Wypisać imię i nazwisko, liczbę miesięcy przepracowanych – funkcje 
months_between oraz round oraz kolumnę wysokość_dodatku jako (użyć CASE 
lub DECODE): 
● 10% wynagrodzenia dla liczby miesięcy do 150 
● 20% wynagrodzenia dla liczby miesięcy od 150 do 200 
● 30% wynagrodzenia dla liczby miesięcy od 200 
● uporządkować według liczby miesięcy 

SELECT 
    first_name || ' ' || last_name AS imie_nazwisko,
    ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) AS miesiace_przepracowanych,
    CASE 
        WHEN ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) < 150 THEN salary * 0.10
        WHEN ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) >= 150 AND ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) < 200 THEN salary * 0.20
        WHEN ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) >= 200 THEN salary * 0.30
    END AS wysokosc_dodatku
FROM EMPLOYEES
ORDER BY miesiace_przepracowanych;

5.Dla każdego działów w których minimalna płaca jest wyższa niż 5000 wypisz 
sumę oraz średnią zarobków zaokrągloną do całości nazwij odpowiednio 
kolumny 

SELECT department_id,
       SUM(salary) AS suma_zarobkow,
       ROUND(AVG(salary)) AS srednia_zarobkow
FROM employees
WHERE department_id IS NOT NULL
GROUP BY department_id
HAVING MIN(salary) > 5000;

6.Wypisać nazwisko, numer departamentu, nazwę departamentu, id pracy, dla 
osób z pracujących Toronto 

SELECT e.last_name,
       e.department_id,
       d.department_name,
       e.job_id
FROM employees e
JOIN departments d ON e.department_id = d.department_id
JOIN locations l ON d.location_id = l.location_id
WHERE l.city = 'Toronto';

7.Dla pracowników o imieniu „Jennifer” wypisz imię i nazwisko tego pracownika 
oraz osoby które z nim współpracują 

SELECT j.first_name || ' ' || j.last_name AS jennifer,
       c.first_name || ' ' || c.last_name AS wspolpracownik
FROM employees j
JOIN employees c ON j.department_id = c.department_id
WHERE j.first_name = 'Jennifer'
  AND c.employee_id <> j.employee_id;

8.Wypisać wszystkie departamenty w których nie ma pracowników 

SELECT d.department_id,
       d.department_name
FROM departments d
LEFT JOIN employees e ON d.department_id = e.department_id
WHERE e.department_id IS NULL;

9.Wypisz imię i nazwisko, id pracy, nazwę departamentu, zarobki, oraz 
odpowiedni grade dla każdego pracownika 

SELECT e.first_name || ' ' || e.last_name AS imie_nazwisko,
       e.job_id,
       d.department_name,
       e.salary,
       g.grade
FROM employees e
LEFT JOIN departments d ON e.department_id = d.department_id
LEFT JOIN job_grades g ON e.salary BETWEEN g.min_salary AND g.max_salary;

10.Wypisz imię nazwisko oraz zarobki dla osób które zarabiają więcej niż średnia 
wszystkich, uporządkuj malejąco według zarobków 

SELECT first_name || ' ' || last_name AS imie_nazwisko,
       salary
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees)
ORDER BY salary DESC;

11. Wypisz id imię i nazwisko osób, które pracują w departamencie z osobami 
mającymi w nazwisku „u” 

SELECT employee_id, first_name, last_name
FROM employees
WHERE department_id IN (
    SELECT DISTINCT department_id
    FROM employees
    WHERE last_name LIKE '%u%'
);

12.Znajdź pracowników, którzy pracują dłużej niż średnia długość zatrudnienia w 
firmie. 

SELECT employee_id, first_name, last_name, hire_date
FROM employees
WHERE MONTHS_BETWEEN(SYSDATE, hire_date) > 
      (SELECT AVG(MONTHS_BETWEEN(SYSDATE, hire_date)) FROM employees);

13.Wypisz nazwę departamentu, liczbę pracowników oraz średnie wynagrodzenie 
w każdym departamencie. Sortuj według liczby pracowników malejąco. 

SELECT d.department_name,
       COUNT(e.employee_id) AS liczba_pracownikow,
       ROUND(AVG(e.salary), 2) AS srednie_wynagrodzenie
FROM departments d
LEFT JOIN employees e ON d.department_id = e.department_id
GROUP BY d.department_name
ORDER BY liczba_pracownikow DESC;   

14.Wypisz imiona i nazwiska pracowników, którzy zarabiają mniej niż jakikolwiek 
pracownik w departamencie „IT”. 

SELECT first_name, last_name, salary
FROM employees
WHERE salary < (SELECT MIN(salary)
                FROM employees e
                JOIN departments d ON e.department_id = d.department_id
                WHERE d.department_name = 'IT');

15.Znajdź departamenty, w których pracuje co najmniej jeden pracownik 
zarabiający więcej niż średnia pensja w całej firmie. 

SELECT DISTINCT d.department_id, d.department_name
FROM departments d
JOIN employees e ON d.department_id = e.department_id
WHERE e.salary > (SELECT AVG(salary) FROM employees);

16.Wypisz pięć najlepiej opłacanych stanowisk pracy wraz ze średnimi zarobkami. 

SELECT j.job_title, 
       ROUND(AVG(e.salary), 2) AS srednie_wynagrodzenie
FROM jobs j
JOIN employees e ON j.job_id = e.job_id
GROUP BY j.job_title
ORDER BY srednie_wynagrodzenie DESC
FETCH FIRST 5 ROWS ONLY;

17.Dla każdego regionu, wypisz nazwę regionu, liczbę krajów oraz liczbę 
pracowników, którzy tam pracują. 

SELECT r.region_name,
       COUNT(DISTINCT c.country_id) AS liczba_krajow,
       COUNT(e.employee_id) AS liczba_pracownikow
FROM regions r
LEFT JOIN countries c ON r.region_id = c.region_id
LEFT JOIN locations l ON c.country_id = l.country_id
LEFT JOIN departments d ON l.location_id = d.location_id
LEFT JOIN employees e ON d.department_id = e.department_id
GROUP BY r.region_name;

18. Podaj imiona i nazwiska pracowników, którzy zarabiają więcej niż ich 
menedżerowie. 

SELECT e.first_name, e.last_name, e.salary AS salary_employee, 
       m.first_name AS manager_first_name, m.last_name AS manager_last_name, m.salary AS salary_manager
FROM employees e
JOIN employees m ON e.manager_id = m.employee_id
WHERE e.salary > m.salary;

19.Policz, ilu pracowników zaczęło pracę w każdym miesiącu (bez względu na rok). 

SELECT 
    TO_CHAR(hire_date, 'YYYY-MM') AS MONTH, 
    COUNT(employee_id) AS liczba_pracownikow
FROM 
    employees
GROUP BY 
    TO_CHAR(hire_date, 'YYYY-MM')
ORDER BY 
    MONTH;

20.Znajdź trzy departamenty z najwyższą średnią pensją i wypisz ich nazwę oraz 
średnie wynagrodzenie. 

SELECT d.department_name, 
       ROUND(AVG(e.salary), 2) AS srednie_wynagrodzenie
FROM departments d
JOIN employees e ON d.department_id = e.department_id
GROUP BY d.department_name
ORDER BY srednie_wynagrodzenie DESC
FETCH FIRST 3 ROWS ONLY;




